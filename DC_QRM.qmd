---
title: "Quantitative Risk Management in R"
subtitle: "DataCamp"
date: "31-03-2024"
format: html
editor: visual
---


### Video 1

Hello. My name is Alex McNeil, and I am going to take your through "An Introduction to Quantitative Risk Management".

2.  About me 00:09 - 01:15 My background is in mathematical statistics, actuarial science, and quantitative finance. Together with my colleagues Ruediger Frey and Paul Embrechts, I am the author of the book "Quantitative Risk Management: Concepts, Techniques, and Tools", published by Princeton University Press. If you want the theoretical background to this course, I recommend you take a look. Together with my co-authors and with Marius Hofert, I have also created the website qrmtutorial(dot)org which provides complementary materials to the QRM book. In particular, there is a lot of R code there, which you might want to try after you've taken this course. Marius and I have two R packages which feature prominently in qrmtutorial. These are qrmdata, which is a large collection of financial datasets for students and researchers in QRM, and qrmtools, which is a set of useful functions. You'll use these packages in the course.

3.  The objective of QRM 01:15 - 02:40 In QRM, the goal is to quantify the risk of a portfolio of risky assets. Measuring the risk is the first step towards managing the risk. In the book I wrote, we consider the typical portfolios of risky assets held by banks and insurance companies, and sometimes also their liabilities. But the ideas apply equally to the portfolio of a private investor, like you or me. Managing the risk can entail many things. For example, you might try to reduce the risk by selling assets, by acquiring new assets to increase the diversification of the portfolio, or by using so-called hedging strategies. For the banks and insurers, an important part of managing risk is making sure they have sufficient capital to withstand large losses on their portfolios and remain solvent. For this purpose, they compute measurements of the amounts that they could lose in periods of extreme market stress. A well-known example of one of these risk measures is Value-at-Risk. In this course, you will work up to calculating Value-at-Risk for portfolios. To begin with, it is important to consider where the risk in a portfolio comes from.

4.  Risk factors 02:40 - 03:56 So think of a portfolio of risky assets. It might contain some stock index trackers, some individual stocks, some government bonds or treasuries, some corporate bonds. It might contain assets denominated in domestic currency and some denominated in foreign currencies. It might contain commodities, like gold. It might contain some derivative securities designed to hedge risk or speculate on price movements, such as equity options. The value of this portfolio at any point in time depends on the fluctuating values of many underlying quantities, which we call risk factors. Examples of risk factors are equity indexes, individual equity prices, foreign exchange rates, interest rates for different borrowing periods (in the case of bonds), and commodity prices. Let's load the QRMdata package and then the dataset SP500. This contains daily values of the well-known equity index based on 500 of the most important US stocks.

5.  Analyzing risk factors with R 03:56 - 04:13 Using head and tail, the first few lines, and the last few lines of the data can be displayed. Note the dates of the first few values in 1950 and the last few values up to the end of 2015.

6.  Plotting risk factors 04:13 - 04:28 Let's plot the index. You can see how it has generally gone up over time, but with some drawdowns such as around the 2008-2009 financial crisis.


```{r}
install.packages("qrmdata")
```
## Setup

```{r, message=FALSE, warning=FALSE}
library(xts)
library(zoo)
library(qrmdata)
library(qrmtools)
library(tidyverse)
library(quantmod)
library(PerformanceAnalytics)

```


# Load DJ index
```{r}
data(DJ)
```


# Show head() and tail() of DJ index
```{r}
head(DJ)
tail(DJ)
```

# Plot DJ index
```{r}
plot(DJ)
```


# Extract 2008-2009 and assign to dj0809
```{r}
dj0809 <- DJ["2008/2009"]
```


# Plot dj0809
```{r}
plot(dj0809)

```




